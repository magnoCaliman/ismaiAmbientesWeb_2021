* AULA 01 - 02/MAR
** Setup
*** Softwares
**** Editor de texto específico para trabalho com código
- Sublime Text 3 - https://www.sublimetext.com/ 
- Existem outros:
  - Visual Studio Code - https://code.visualstudio.com/
  - Atom - https://atom.io/
  - Brackets - http://brackets.io/

**** Navegador
- Google Chrome - https://www.google.com/chrome/
- Firefox - https://www.mozilla.org/en-US/firefox/new/
- *Fujam de navegadores da Apple/Microsoft*: Safari, Edge ou (especialmente!) Internet Explorer

*** Estrutura de pasta *fixa* para ficheiros do semestre
- Entender conceito de /endereço de um ficheiro/ no HD:
  - ~C:\Users\Pedro\Downloads\matricula.pdf~
  - ~C:\Users\Pedro\Desktop\trabalho-final\trabalho-final-versao-final2-revisada.doc~
  - ~/Users/magno/Documents/ambientesWeb/aula01/helloWord.txt~

#+BEGIN_QUOTE
*DE HOJE EM DIANTE NÃO É MAIS PERMITIDO O USO DE ESPAÇOS EM BRANCO AO NOMEAR PASTAS E FICHEIROS (trabalho final.txt ou Documentos/ambientes web/aula 01), ASSIM COMO QUALQUER TIPO DE [[https://pt.wikipedia.org/wiki/Diacr%C3%ADtico][DIACRÍTICO]] (á, ç, ô, etc).*
#+END_QUOTE

- Minha sugestão:
[[./img/aula01_img1.png]]

*** Plataforma
**** GitHub - https://github.com/
1. Criar conta no GitHub - (usar próprio nome como usuário!)
2. Criar um repositório chamado "hello_world"
   1. https://docs.github.com/en/github/getting-started-with-github/create-a-repo - (ignorar item 5 - "Select Initialize this repository with a README")
3. Fazer seu primeiro /commit/ e upload de um arquivo de texto criado no Sublime Text
   1. https://github.blog/2016-02-18-upload-files-to-your-repositories/

** Grupos de investigação
1. Separar grupos de 4 ou 5 pessoas
2. Criar chat no Teams com o grupo e me adicionar

- Semestre se dará através de uma dinâmica de /grupos de investição/
  - Pessoas com interesses artísticos/acadêmicos em comum que realizam pesquisas /individuais/, mas que possuem um núcleo comum, podendo portanto se complementar.
  - http://citei.ismai.pt/pt
- Todas as atividades do semestre serão realizadas no contexto do seu GI.
- Ninguém deve estar fora de um GI! Avisem colegas que não estejam presentes na aula de hoje, para que os grupos estejam montados para a próxima aula.


* AULA 02 - 09/MAR

** Grupos 

** Conceitos 
*** Navegador como compilador/interpretador
- Uma página web é (como a maior parte dos códigos de computador) somente um /arquivo de texto/. Esses arquivos possuem a extensão ~.html~

#+begin_quote
HTML files are nothing more than simple text files
https://www.htmldog.com/guides/html/beginner/gettingstarted/
#+end_quote

*** HTML (Hypertext Markup Language)
- Ao escrever HTML, tens que estar sempre a pensar em termos de /conteúdo estruturado/.

#+BEGIN_QUOTE
HTML /describes/ the structure of a Web Page.\\
W3 - https://www.w3schools.com/html/html_intro.asp
#+END_QUOTE

#+BEGIN_SRC html
Essa é a primeira linha
<br>
Essa, a segunda
#+END_SRC

#+BEGIN_QUOTE
Markup means that with HTML you declare /what/ is presented to a viewer, not /how/ it is presented.\\
HTML 5 - Notes For Professionals. p.2 - https://books.goalkicker.com/HTML5Book/
#+END_QUOTE

#+BEGIN_SRC html
<h1>Esse item tem muita importância</h1>
<h2>Esse, um pouco menos...</h2>
<h3>Esse menos ainda...</h3>

<p>
    Lorem ipsum dolor sit amet, <em>consectetur adipiscing elit</em>. Donec sit amet sem volutpat, ullamcorper orci at, vehicula diam. Fusce dictum diam tempus ex iaculis eleifend. Etiam rhoncus felis sed lorem imperdiet, et consectetur ante porta. Sed in feugiat ex. Fusce efficitur volutpat maximus. Etiam eu odio nunc. Morbi dapibus dui finibus egestas laoreet.
</p>
  
<p>
    In vel fringilla lacus. <strong>Ut suscipit interdum enim</strong>. Proin posuere bibendum mauris in tempor. Nunc sagittis odio sed facilisis cursus. Cras consequat metus nec justo sollicitudin venenatis. Sed congue, orci at porta semper, ex arcu laoreet diam, id congue massa urna et mauris. Sed pellentesque risus porta, tempor est eget, dictum nunc. Fusce ornare tincidunt mi, eu viverra urna luctus ac. Duis efficitur massa quam. Duis et consequat mi, et dignissim nulla. Duis at molestie sem. Vivamus nec magna massa.
</p>

Integer velit ligula, ullamcorper et aliquam eu, fringilla eget nisl. Phasellus consectetur, dui eu posuere porta, risus odio fermentum massa, id suscipit sem orci at leo. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Vivamus volutpat metus leo, sed posuere nisl consectetur vitae. Phasellus porttitor maximus euismod. Duis placerat augue vitae arcu dapibus suscipit. Vestibulum ac orci fringilla, rutrum orci a, pharetra velit. Nunc porttitor, nisl eget mollis tristique, elit sem porta metus, ut varius erat elit ultricies odio. Donec tincidunt nibh ut eros ornare, quis tempor neque pellentesque. Vestibulum non pharetra risus. Vivamus tempus scelerisque suscipit. Lorem ipsum dolor sit amet, consectetur adipiscing elit.
#+END_SRC

#+BEGIN_QUOTE
The primary thing to keep in mind, the supermagic key, is that HTML is used for *meaning* and CSS is used for *presentation*. HTML is nothing more than fancy structured content and the visual formatting of that content will come later when we tackle CSS.
https://www.htmldog.com/guides/html/beginner/
#+END_QUOTE

*** Tag
- Palavras reservadas que fazem parte da linguagem HTML. Tal qual Processing possui /funções/ como ~size()~, ~rect()~, ~if(){}~ (os "faça isso!" da linguagem), HTML possui /tags/ como ~<h1>~, ~<p>~ e ~<em>~ que irão /identificar um conteúdo em relação à uma estrutura/. Uma "etiqueta". Algo que identifica um objeto.

- Algumas definições possíveis:
  - "Provide semantic meaning to the content in the page" - HTML 5 - Notes For Professionals. p.2 - https://books.goalkicker.com/HTML5Book/
  - "Surround content and apply meaning to it" - HTMLdog - https://www.htmldog.com/guides/html/beginner/tags/
  - "Label pieces of content / elements names surrounded by angle brackets" - W3 - https://www.w3schools.com/html/html_intro.asp
  - "Is used to create an element" - MND docs - https://developer.mozilla.org/en-US/docs/Glossary/Tag

- Atenção para a /abertura/ e o /fechamento/ de algumas (mas não todas) tags.

#+begin_src html
<p>
  Esse paragrafo está delimitado por uma tag e seu respectivo fechamento 
</p>

Já essa linha é separada da de baixo...
<br>
...por uma tag de <em>line break</em> que não possui conteúdo (portanto não precisa de fechamento).
#+end_src 

*** Código [[https://en.wikipedia.org/wiki/Boilerplate_text][boilerplate]]
- Conjunto de tags que descrevem a estrutura básica de uma página HTML:

#+BEGIN_SRC html
<html>
<head>
  <title>título</title>
  <meta charset="utf-8">
</head>

<body>
  essa é primeira linha
  <br>
  e essa é a segunda
</body>
</html>
#+END_SRC

Apesar de todas as tags, a página tem o mesmo aspecto do exemplo anterior, já que [[https://www.htmldog.com/guides/html/beginner/tags/][the purpose of HTML is to apply meaning, not presentation]]

- Distinção entre ~<head>~ e ~<body>~

** Documentação
- Regra #0 de programação: RTFM
  - W3 Schools - https://www.w3schools.com/tags/default.asp
  - MDN Web Docs - https://developer.mozilla.org/en-US/docs/Web/HTML/Element

** TPC
- Recriar a /estrutura/ do [[https://pt.wikipedia.org/wiki/Bruno_Aleixo][verbete da Wikipedia do Bruno Aleixo]]
  - Limitar-se ao conteúdo do verbete (texto, links, parágrafos), sem menus e caixas laterais, barras de busca, cores, etc.
  - /Estrutura/ aqui deve ser entendido como os elementos e suas relações com a página, assim como os elementos e suas relações hierárquicas.
  - Trabalhar com o seu GI no estudo da documentação, com entrega *individual* dia 21/03
    - Entrega: criação de repositório de nome /bruno_aleixo/ em seu GitHub pessoal.

[[./img/aula02_img1.png]]

*** Vocabulário
 - As tags necessárias para realização do exercício são:
   - ~<html>~, ~<head>~, ~<title>~, ~<body>~, ~<h1>~, ~<h2>~, ~<h3>~, ~<h4>~, ~<hr>~, ~<p>~, ~<strong>~, ~<a>~, ~<em>~, ~<ol>~, ~<ul>~, ~<li>~ e ~<sup>~.
 - Todo os conceitos necessários são apresentados [[https://www.htmldog.com/guides/html/beginner/][nesse tutorial]] nos primeiros sete itens (entre /Getting Started/ e /Links/), à exceção dos tags ~<hr>~ e ~<sup>~. 
 - Atenção especial para os tags de criação de listas e links. Eles são os mais complexos.


* AULA 03 - 16/MAR

** Servidores && GitHub Pages
[[./img/aula03_img1.png]]

- Na página de configurações do repositório (Settings) -> GitHub Pages
  - Source -> "master" ou "main" 
  - Folder -> "/ (root)"

- Caso o repositório tenha um arquivo ~index.html~ na /raiz da estrutura de pasta/, esse arquivo poderá ser visualizado em ~https://nomedousuario.github.io/nomedorepositorio~

#+begin_quote
IMPORTANTE! Somente repositórios *públicos* podem ser servidos através do GitHub Pages 
#+end_quote

** Entregas dos TPC
- Criar um repositório de nome /entregas/, que irá conter um link para todas as entregas de trabalhos do semestre.


* AULA 04 - 23/MAR

** Entregas dos TPC (encore...)
- Página contendo *link* para todas as entregas do semestre
  - https://magnocaliman.github.io/entregas/

** Atributos
- Anatomia de um tag: 
#+BEGIN_SRC fundamental
         name value  content
           |    |      |
         |---|-----| |---|

<element attr="foo"> [...] </element>

   ^    |__________|      |_________|
   |         |                 |
start tag  attribute        end tag
#+END_SRC

- Da [[https://www.w3schools.com/html/html_attributes.asp][documentação]] sobre atributos na W3 school:
  - All HTML elements can have *attributes*
  - Attributes provide *additional information* about elements
  - Attributes are always specified in the *start tag*
  - Attributes usually come in name/value pairs like: ~name="value".~ 

#+begin_quote
An attribute extends an element, chaging its behaviour or providing metadata \\
https://developer.mozilla.org/en-US/docs/Glossary/Attribute
#+end_quote

** Referenciando arquivos externos && ~<img>~
- Como sempre, documentação da [[https://www.w3schools.com/tags/tag_img.asp][W3]] é mais amigável, enquanto da [[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img][Mozilla]] é mais aprofundada
- O atributo ~src~ pode indicar o caminho (/path/) para o arquivo da imagem de duas maneiras:
  - Path "remoto": ~<img src="www.algum-website.com/alguma-imagem.png">~
  - Path "local": ~<img src="img/alguma-imagem.png">~

** Repositório local vs. Repositório remoto
[[./img/aula04_img1.png]]
- Método de upload de arquivos (criação de /commits/) via cliente web do GitHub não permite upload de pastas (como nossas pastas de imagens...). Também torna difícil a modificação de arquivos já existentes no repositório. Por isso, passaremos a usar o [[https://desktop.github.com/][cliente desktop do GitHub]].
  - Instalar e fazer login com suas credenciais do GitHub.
  - "Create a new repository on your hard drive"
    - Até agora, só sabemos criar um repositório já no servidor do GitHub.
    - Cliente desktop nos permite criar um repositorio /local/. Parece uma pasta vazia, mas que na verdade tem um monte de arquivos ocultos (~.gitattributes~ aparece no Windows).
  - Pasta está vazia, mas está sendo monitorada (/tracked/) para mudanças. Repositório é isso, /uma pasta monitorada/.
    - Perfeito para /controle de versão/.
  - Depois dos commits (quantos quiseres...), upload p/ GitHub ("/push to origin/"). Sincronizas o repositório local, com o remoto.

** TPC
[[./img/aula04_img2.png]]
- Net Art Anthology - https://anthology.rhizome.org/
  - Discuta com seu grupo de investigação os trabalhos apresentados em "Chapter 1: 1984-1998". Que tipos de narrativas o espaço "virtual" /hyperlinkado/ proporcionou? Que novas estéticas visuais/sonoras/interativas?
  - Baseado nessa exploração, proponha (individualmente) um site que dialogue com um ou mais aspectos dessas obras.
- Data de entrega: 05/04
- Bibliografia de apoio (outras estão listadas na Ficha Programática no portal):
  - [[https://www.youtube.com/watch?v=IBHcKspN1cU][Christiane Paul: Lives of Net Art]]
  - [[./docs/greene_2010.pdf][GREENE, Rachel. (2000) Web Work - A History of Internet Art]]
  - [[./docs/carreira_2017.pdf][CARREIRA, Lia (2017) Experimental curating in times of the perpetual beta: strategies and platforms for online-based art]]


* AULA 05 - 06/ABR

** CSS - /Cascading Style Sheet/

[[./img/aula05_img1.gif]]

#+BEGIN_QUOTE
The primary thing to keep in mind, the supermagic key, is that HTML is used for *meaning* and CSS is used for *presentation*. HTML is nothing more than fancy structured content and the visual formatting of that content will come later when we tackle CSS.
https://www.htmldog.com/guides/html/beginner/
#+END_QUOTE

- CSS então adiciona uma terceira dimensão para isso. /Conteúdo/ e sua relação com uma /estrutura/ (HTML), e como esse "conteúdo estruturado" é /apresentado/ (CSS).
  - Na prática: um ficheiro extra na estrutura de pasta do seu site, com instruções para o navegador de /como interpratar graficamente os elementos HTML/.

*** Linkando arquivo externo
- Tal qual uma imagem, é preciso especificar /onde/ na estrutura de pasta está o arquivo ~.css~
  - Convenção: pasta chamada ~css~ na raiz do seu projeto, com arquivo ~style.css~ dentro:

#+begin_example
meuSite/
├─ css/
│  ├─ style.css
├─ img/
│  ├─ foto01.png
│  ├─ foto02.png
├─ index.html
#+end_example

- Usa-se então o tag ~<link>~, dentro de ~<head>~, para estabelecer a comunicação entre o ficheiro HTML e o ficheiro CSS externo:
  - [[https://www.w3schools.com/Tags/tag_link.asp][Documentação]] de ~<link>~

#+begin_src html
<link rel="stylesheet" href="css/style.css">
#+end_src

- [[./arquivosAula05/arquivosAula05.zip][Arquivos de exemplo para aula 05]]
  - Um mesmo HTML, com dois CSS distintos demonstrando algumas das possibilidades de controle sobre o conteúdo gráfico de uma página.
  - Aproximadamente o que é coberto no [[https://htmldog.com/guides/css/beginner/][CSS Beginner Tutorial]] do HTML Dog.

- Obs.: Existem outras duas maneiras de se utilizar CSS, "inline" e "internal". Para mais info, ver [[https://htmldog.com/guides/css/beginner/applyingcss/][esse tutorial]].

*** Anatomia de um arquivo CSS

#+begin_src css
seletor {
    propriedade: valor;
}
#+end_src

- Sintaxe de CSS é completamente diferente de HTML. Paradigma de /pares chave-valor/ ("key-value pairs"), associados a um ou mais elemento HTML.
